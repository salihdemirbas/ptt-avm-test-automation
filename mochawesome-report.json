{
  "stats": {
    "suites": 12,
    "tests": 24,
    "passes": 22,
    "pending": 0,
    "failures": 2,
    "testsRegistered": 24,
    "passPercent": 91.66666666666667,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-06-27T11:43:32.037Z",
    "end": "2025-06-27T11:57:47.279Z",
    "duration": 855242
  },
  "results": [
    {
      "uuid": "0a6d44a8-e35d-4be4-9b42-3617d19c5648",
      "title": "",
      "fullFile": "cypress\\e2e\\petstore-api-test-with-cypress-axios.cy.js",
      "file": "cypress\\e2e\\petstore-api-test-with-cypress-axios.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6a299ec4-0ee1-456d-ab0b-e783d7cdf6d9",
          "title": "PetStore Simple API Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should get pets by status=available successfully",
              "fullTitle": "PetStore Simple API Test should get pets by status=available successfully",
              "timedOut": null,
              "duration": 2473,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const response = await axios.get(`${baseUrl}/pet/findByStatus?status=available`);\n  // Status code kontrolü\n  expect(response.status).to.equal(200);\n  // Response data kontrolü\n  expect(response.data).to.be.an('array');\n  expect(response.data.length).to.be.greaterThan(0);\n  // İlk pet'in yapısını kontrol et\n  const firstPet = response.data[0];\n  expect(firstPet).to.have.property('id');\n  expect(firstPet).to.have.property('name');\n  expect(firstPet).to.have.property('tags');\n  expect(firstPet).to.have.property('status');\n  expect(firstPet.status).to.equal('available');\n  expect(firstPet.category.id).to.equal(0);\n  cy.log('Pet status=available API testi başarılı');\n  cy.log(`Bulunan pet sayısı: ${response.data.length}`);\n} catch (error) {\n  cy.log('Pet status=available API testi başarısız:', error.message);\n  throw error;\n}",
              "err": {},
              "uuid": "08d844cb-e4ab-4ab7-9909-2b61d27783db",
              "parentUUID": "6a299ec4-0ee1-456d-ab0b-e783d7cdf6d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should get pets by status=pending successfully",
              "fullTitle": "PetStore Simple API Test should get pets by status=pending successfully",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const response = await axios.get(`${baseUrl}/pet/findByStatus?status=pending`);\n  // Status code kontrolü\n  expect(response.status).to.equal(200);\n  // Response data kontrolü\n  expect(response.data).to.be.an('array');\n  // İlk pet'in yapısını kontrol et (eğer varsa)\n  if (response.data.length > 0) {\n    const firstPet = response.data[0];\n    expect(firstPet).to.have.property('id');\n    expect(firstPet).to.have.property('name');\n    expect(firstPet).to.have.property('status');\n    expect(firstPet.status).to.equal('pending');\n  }\n  cy.log('Pet status=pending API testi başarılı');\n  cy.log(`Bulunan pet sayısı: ${response.data.length}`);\n} catch (error) {\n  cy.log('Pet status=pending API testi başarısız:', error.message);\n  throw error;\n}",
              "err": {},
              "uuid": "1934da5b-9559-4a9f-9fc8-c20ca4f4bf6a",
              "parentUUID": "6a299ec4-0ee1-456d-ab0b-e783d7cdf6d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should get pets by status=sold successfully",
              "fullTitle": "PetStore Simple API Test should get pets by status=sold successfully",
              "timedOut": null,
              "duration": 157,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const response = await axios.get(`${baseUrl}/pet/findByStatus?status=sold`);\n  // Status code kontrolü\n  expect(response.status).to.equal(200);\n  // Response data kontrolü\n  expect(response.data).to.be.an('array');\n  // İlk pet'in yapısını kontrol et \n  if (response.data.length > 0) {\n    const firstPet = response.data[0];\n    expect(firstPet).to.have.property('id');\n    expect(firstPet).to.have.property('name');\n    expect(firstPet).to.have.property('status');\n    expect(firstPet.status).to.equal('sold');\n  }\n  cy.log('Pet status=sold API testi başarılı');\n  cy.log(`Bulunan pet sayısı: ${response.data.length}`);\n} catch (error) {\n  cy.log('Pet status=sold API testi başarısız:', error.message);\n  throw error;\n}",
              "err": {},
              "uuid": "edb9e750-b769-4b40-b75b-4af83f659b63",
              "parentUUID": "6a299ec4-0ee1-456d-ab0b-e783d7cdf6d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add a new pet successfully via POST",
              "fullTitle": "PetStore Simple API Test should add a new pet successfully via POST",
              "timedOut": null,
              "duration": 313,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newPet = {\n  id: 16,\n  category: {\n    id: 1,\n    name: 'Dogs'\n  },\n  name: 'Gofret',\n  photoUrls: ['https://www.pttavm.com/'],\n  tags: [{\n    id: 1,\n    name: 'test'\n  }],\n  status: 'available'\n};\ntry {\n  const response = await axios.post(`${baseUrl}/pet`, newPet, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  // Status code kontrolü\n  expect(response.status).to.equal(200);\n  // Response data kontrolü\n  expect(response.data).to.be.an('object');\n  expect(response.data.id).to.equal(newPet.id);\n  expect(response.data.name).to.equal(newPet.name);\n  expect(response.data.status).to.equal(newPet.status);\n  expect(response.data.category.name).to.equal(newPet.category.name);\n  expect(response.data.photoUrls).to.deep.equal(newPet.photoUrls);\n  expect(response.data.tags).to.deep.equal(newPet.tags);\n  cy.log('Pet POST ile başarıyla eklendi');\n  cy.log(`Eklenen pet ID: ${response.data.id}`);\n} catch (error) {\n  cy.log('Pet POST testi başarısız:', error.message);\n  throw error;\n}",
              "err": {},
              "uuid": "3becf321-8ff6-4663-a9b7-c243bd5eb8f6",
              "parentUUID": "6a299ec4-0ee1-456d-ab0b-e783d7cdf6d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "08d844cb-e4ab-4ab7-9909-2b61d27783db",
            "1934da5b-9559-4a9f-9fc8-c20ca4f4bf6a",
            "edb9e750-b769-4b40-b75b-4af83f659b63",
            "3becf321-8ff6-4663-a9b7-c243bd5eb8f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3104,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1b140511-b7fb-4fbb-9e23-add893fa46e4",
      "title": "",
      "fullFile": "cypress\\e2e\\sepetkontrol.cy.js",
      "file": "cypress\\e2e\\sepetkontrol.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "49666727-61e7-46e9-8cef-bd26554ee2da",
          "title": "PTT Sepet Kontrol",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Alışveriş akışı",
              "fullTitle": "PTT Sepet Kontrol Alışveriş akışı",
              "timedOut": null,
              "duration": 19872,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://www.pttavm.com/');\nhomePage.login('salih.demirbas.test@outlook.com', 'Salih.test123');\nhomePage.searchProduct('telefon');\nlistPage.checkSearchUrl();\nlistPage.selectFourthProduct();\nproductDetailPage.saveProductName();\nproductDetailPage.saveProductPrice();\nproductDetailPage.addToCart();\nproductDetailPage.checkCartBadgeVisible();\nproductDetailPage.checkModalVisible();\nproductDetailPage.goToCart();\ncheckoutPage.checkCartUrl();\ncheckoutPage.checkProductDetails();\ncheckoutPage.removeProductFromCart();",
              "err": {},
              "uuid": "5282b278-89ce-497b-9bff-40d1975277ad",
              "parentUUID": "49666727-61e7-46e9-8cef-bd26554ee2da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5282b278-89ce-497b-9bff-40d1975277ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19872,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e5dfb00a-3172-43e1-af46-c4b2f8ec21c6",
      "title": "",
      "fullFile": "cypress\\e2e\\favorikontrol.cy.js",
      "file": "cypress\\e2e\\favorikontrol.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8e096c8b-e473-4cd7-a7c9-3bd9bf6af0a1",
          "title": "PTT Urun Favori Kontrol",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Favori Ekleme ve Silme",
              "fullTitle": "PTT Urun Favori Kontrol Favori Ekleme ve Silme",
              "timedOut": null,
              "duration": 28364,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://www.pttavm.com/');\nhomePage.login('salih.demirbas.test@outlook.com', 'Salih.test123');\nhomePage.searchProduct('telefon');\nlistPage.checkSearchUrl();\nlistPage.selectFourthProduct();\nproductDetailPage.saveFavoriteProductName();\nproductDetailPage.checkFavoriteButtonVisible();\nproductDetailPage.clickFavoriteButton();\nproductDetailPage.checkFavoriteAdded();\ncy.visit('https://www.pttavm.com/my/listelerim');\nfavoritePage.checkFavoriteInListPage();\nfavoritePage.removeFavoriteProduct();\nfavoritePage.checkFavoriteListEmpty();",
              "err": {},
              "uuid": "ed434c24-b3b3-4fc9-b730-2d3ee08b2ed5",
              "parentUUID": "8e096c8b-e473-4cd7-a7c9-3bd9bf6af0a1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ed434c24-b3b3-4fc9-b730-2d3ee08b2ed5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28364,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e855448b-47db-4fc8-a48d-3e80aca147d4",
      "title": "",
      "fullFile": "cypress\\e2e\\petstore-api-test-with-cypress-axios.cy.js",
      "file": "cypress\\e2e\\petstore-api-test-with-cypress-axios.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6824152f-4c96-440e-b077-d5bba3ba01ff",
          "title": "PetStore Simple API Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should get pets by status=available successfully",
              "fullTitle": "PetStore Simple API Test should get pets by status=available successfully",
              "timedOut": null,
              "duration": 1732,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const response = await axios.get(`${baseUrl}/pet/findByStatus?status=available`);\n  // Status code kontrolü\n  expect(response.status).to.equal(200);\n  // Response data kontrolü\n  expect(response.data).to.be.an('array');\n  expect(response.data.length).to.be.greaterThan(0);\n  // İlk pet'in yapısını kontrol et\n  const firstPet = response.data[0];\n  expect(firstPet).to.have.property('id');\n  expect(firstPet).to.have.property('name');\n  expect(firstPet).to.have.property('tags');\n  expect(firstPet).to.have.property('status');\n  expect(firstPet.status).to.equal('available');\n  expect(firstPet.category.id).to.equal(0);\n  cy.log('Pet status=available API testi başarılı');\n  cy.log(`Bulunan pet sayısı: ${response.data.length}`);\n} catch (error) {\n  cy.log('Pet status=available API testi başarısız:', error.message);\n  throw error;\n}",
              "err": {},
              "uuid": "86f35ea5-2f46-4f4f-9b8b-b945db81274e",
              "parentUUID": "6824152f-4c96-440e-b077-d5bba3ba01ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should get pets by status=pending successfully",
              "fullTitle": "PetStore Simple API Test should get pets by status=pending successfully",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const response = await axios.get(`${baseUrl}/pet/findByStatus?status=pending`);\n  // Status code kontrolü\n  expect(response.status).to.equal(200);\n  // Response data kontrolü\n  expect(response.data).to.be.an('array');\n  // İlk pet'in yapısını kontrol et (eğer varsa)\n  if (response.data.length > 0) {\n    const firstPet = response.data[0];\n    expect(firstPet).to.have.property('id');\n    expect(firstPet).to.have.property('name');\n    expect(firstPet).to.have.property('status');\n    expect(firstPet.status).to.equal('pending');\n  }\n  cy.log('Pet status=pending API testi başarılı');\n  cy.log(`Bulunan pet sayısı: ${response.data.length}`);\n} catch (error) {\n  cy.log('Pet status=pending API testi başarısız:', error.message);\n  throw error;\n}",
              "err": {},
              "uuid": "2d87e556-c857-472a-98ce-68afefa4f55e",
              "parentUUID": "6824152f-4c96-440e-b077-d5bba3ba01ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should get pets by status=sold successfully",
              "fullTitle": "PetStore Simple API Test should get pets by status=sold successfully",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const response = await axios.get(`${baseUrl}/pet/findByStatus?status=sold`);\n  // Status code kontrolü\n  expect(response.status).to.equal(200);\n  // Response data kontrolü\n  expect(response.data).to.be.an('array');\n  // İlk pet'in yapısını kontrol et \n  if (response.data.length > 0) {\n    const firstPet = response.data[0];\n    expect(firstPet).to.have.property('id');\n    expect(firstPet).to.have.property('name');\n    expect(firstPet).to.have.property('status');\n    expect(firstPet.status).to.equal('sold');\n  }\n  cy.log('Pet status=sold API testi başarılı');\n  cy.log(`Bulunan pet sayısı: ${response.data.length}`);\n} catch (error) {\n  cy.log('Pet status=sold API testi başarısız:', error.message);\n  throw error;\n}",
              "err": {},
              "uuid": "4cde1648-65f0-4a38-8dbf-e455e58b6b09",
              "parentUUID": "6824152f-4c96-440e-b077-d5bba3ba01ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add a new pet successfully via POST",
              "fullTitle": "PetStore Simple API Test should add a new pet successfully via POST",
              "timedOut": null,
              "duration": 288,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newPet = {\n  id: 16,\n  category: {\n    id: 1,\n    name: 'Dogs'\n  },\n  name: 'Gofret',\n  photoUrls: ['https://www.pttavm.com/'],\n  tags: [{\n    id: 1,\n    name: 'test'\n  }],\n  status: 'available'\n};\ntry {\n  const response = await axios.post(`${baseUrl}/pet`, newPet, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  // Status code kontrolü\n  expect(response.status).to.equal(200);\n  // Response data kontrolü\n  expect(response.data).to.be.an('object');\n  expect(response.data.id).to.equal(newPet.id);\n  expect(response.data.name).to.equal(newPet.name);\n  expect(response.data.status).to.equal(newPet.status);\n  expect(response.data.category.name).to.equal(newPet.category.name);\n  expect(response.data.photoUrls).to.deep.equal(newPet.photoUrls);\n  expect(response.data.tags).to.deep.equal(newPet.tags);\n  cy.log('Pet POST ile başarıyla eklendi');\n  cy.log(`Eklenen pet ID: ${response.data.id}`);\n} catch (error) {\n  cy.log('Pet POST testi başarısız:', error.message);\n  throw error;\n}",
              "err": {},
              "uuid": "505e39cb-835f-4a68-bbd5-c90a50b61b85",
              "parentUUID": "6824152f-4c96-440e-b077-d5bba3ba01ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "86f35ea5-2f46-4f4f-9b8b-b945db81274e",
            "2d87e556-c857-472a-98ce-68afefa4f55e",
            "4cde1648-65f0-4a38-8dbf-e455e58b6b09",
            "505e39cb-835f-4a68-bbd5-c90a50b61b85"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2331,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7c5178c5-4428-4031-aea0-304d34fb3487",
      "title": "",
      "fullFile": "cypress\\e2e\\sepetkontrol.cy.js",
      "file": "cypress\\e2e\\sepetkontrol.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "827a95d5-e358-45c8-bddb-5e35a4127a24",
          "title": "PTT Sepet Kontrol",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Alışveriş akışı",
              "fullTitle": "PTT Sepet Kontrol Alışveriş akışı",
              "timedOut": null,
              "duration": 19892,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://www.pttavm.com/');\nhomePage.login('salih.demirbas.test@outlook.com', 'Salih.test123');\nhomePage.searchProduct('telefon');\nlistPage.checkSearchUrl();\nlistPage.selectFourthProduct();\nproductDetailPage.saveProductName();\nproductDetailPage.saveProductPrice();\nproductDetailPage.addToCart();\nproductDetailPage.checkCartBadgeVisible();\nproductDetailPage.checkModalVisible();\nproductDetailPage.goToCart();\ncheckoutPage.checkCartUrl();\ncheckoutPage.checkProductDetails();\ncheckoutPage.removeProductFromCart();",
              "err": {},
              "uuid": "f54fda7f-f5c1-4468-8cfb-217e04065d15",
              "parentUUID": "827a95d5-e358-45c8-bddb-5e35a4127a24",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f54fda7f-f5c1-4468-8cfb-217e04065d15"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19892,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "543e6635-69c0-4016-8dc9-96707edacab2",
      "title": "",
      "fullFile": "cypress\\e2e\\favorikontrol.cy.js",
      "file": "cypress\\e2e\\favorikontrol.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9b0e3f61-adbb-4115-a7f9-c22dd79a7b7a",
          "title": "PTT Urun Favori Kontrol",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Favori Ekleme ve Silme",
              "fullTitle": "PTT Urun Favori Kontrol Favori Ekleme ve Silme",
              "timedOut": null,
              "duration": 45021,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://www.pttavm.com/');\nhomePage.login('salih.demirbas.test@outlook.com', 'Salih.test123');\nhomePage.searchProduct('telefon');\nlistPage.checkSearchUrl();\nlistPage.selectFourthProduct();\nproductDetailPage.saveFavoriteProductName();\nproductDetailPage.checkFavoriteButtonVisible();\nproductDetailPage.clickFavoriteButton();\nproductDetailPage.checkFavoriteAdded();\ncy.visit('https://www.pttavm.com/my/listelerim');\nfavoritePage.checkFavoriteInListPage();\nfavoritePage.removeFavoriteProduct();\nfavoritePage.checkFavoriteListEmpty();",
              "err": {
                "message": "AssertionError: Timed out retrying after 30000ms: Expected to find element: `.evoicon-fav-full`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 30000ms: Expected to find element: `.evoicon-fav-full`, but never found it.\n    at ProductDetailPage.checkFavoriteAdded (webpack://ptt_test/./cypress/support/pageObjects/ProductDetailPage.js:54:52)\n    at Context.eval (webpack://ptt_test/./cypress/e2e/favorikontrol.cy.js:23:22)",
                "diff": null
              },
              "uuid": "617f7140-d4aa-4e35-951f-5b59291173c2",
              "parentUUID": "9b0e3f61-adbb-4115-a7f9-c22dd79a7b7a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "617f7140-d4aa-4e35-951f-5b59291173c2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 45021,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "833f2739-3a8f-4429-96b7-28620513336f",
      "title": "",
      "fullFile": "cypress\\e2e\\petstore-api-test-with-cypress-axios.cy.js",
      "file": "cypress\\e2e\\petstore-api-test-with-cypress-axios.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "52dbc4a6-e5b7-4bac-bbfe-94f31ce329b9",
          "title": "PetStore Simple API Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should get pets by status=available successfully",
              "fullTitle": "PetStore Simple API Test should get pets by status=available successfully",
              "timedOut": null,
              "duration": 1738,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const response = await axios.get(`${baseUrl}/pet/findByStatus?status=available`);\n  // Status code kontrolü\n  expect(response.status).to.equal(200);\n  // Response data kontrolü\n  expect(response.data).to.be.an('array');\n  expect(response.data.length).to.be.greaterThan(0);\n  // İlk pet'in yapısını kontrol et\n  const firstPet = response.data[0];\n  expect(firstPet).to.have.property('id');\n  expect(firstPet).to.have.property('name');\n  expect(firstPet).to.have.property('tags');\n  expect(firstPet).to.have.property('status');\n  expect(firstPet.status).to.equal('available');\n  expect(firstPet.category.id).to.equal(0);\n  cy.log('Pet status=available API testi başarılı');\n  cy.log(`Bulunan pet sayısı: ${response.data.length}`);\n} catch (error) {\n  cy.log('Pet status=available API testi başarısız:', error.message);\n  throw error;\n}",
              "err": {},
              "uuid": "343c008d-79c3-476c-aac3-35789b1bfc46",
              "parentUUID": "52dbc4a6-e5b7-4bac-bbfe-94f31ce329b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should get pets by status=pending successfully",
              "fullTitle": "PetStore Simple API Test should get pets by status=pending successfully",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const response = await axios.get(`${baseUrl}/pet/findByStatus?status=pending`);\n  // Status code kontrolü\n  expect(response.status).to.equal(200);\n  // Response data kontrolü\n  expect(response.data).to.be.an('array');\n  // İlk pet'in yapısını kontrol et (eğer varsa)\n  if (response.data.length > 0) {\n    const firstPet = response.data[0];\n    expect(firstPet).to.have.property('id');\n    expect(firstPet).to.have.property('name');\n    expect(firstPet).to.have.property('status');\n    expect(firstPet.status).to.equal('pending');\n  }\n  cy.log('Pet status=pending API testi başarılı');\n  cy.log(`Bulunan pet sayısı: ${response.data.length}`);\n} catch (error) {\n  cy.log('Pet status=pending API testi başarısız:', error.message);\n  throw error;\n}",
              "err": {},
              "uuid": "eb7d727a-6288-413d-8ba5-81123b3eed56",
              "parentUUID": "52dbc4a6-e5b7-4bac-bbfe-94f31ce329b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should get pets by status=sold successfully",
              "fullTitle": "PetStore Simple API Test should get pets by status=sold successfully",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const response = await axios.get(`${baseUrl}/pet/findByStatus?status=sold`);\n  // Status code kontrolü\n  expect(response.status).to.equal(200);\n  // Response data kontrolü\n  expect(response.data).to.be.an('array');\n  // İlk pet'in yapısını kontrol et \n  if (response.data.length > 0) {\n    const firstPet = response.data[0];\n    expect(firstPet).to.have.property('id');\n    expect(firstPet).to.have.property('name');\n    expect(firstPet).to.have.property('status');\n    expect(firstPet.status).to.equal('sold');\n  }\n  cy.log('Pet status=sold API testi başarılı');\n  cy.log(`Bulunan pet sayısı: ${response.data.length}`);\n} catch (error) {\n  cy.log('Pet status=sold API testi başarısız:', error.message);\n  throw error;\n}",
              "err": {},
              "uuid": "80b5d8e5-bab8-4887-9942-f0f64282118f",
              "parentUUID": "52dbc4a6-e5b7-4bac-bbfe-94f31ce329b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add a new pet successfully via POST",
              "fullTitle": "PetStore Simple API Test should add a new pet successfully via POST",
              "timedOut": null,
              "duration": 294,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newPet = {\n  id: 16,\n  category: {\n    id: 1,\n    name: 'Dogs'\n  },\n  name: 'Gofret',\n  photoUrls: ['https://www.pttavm.com/'],\n  tags: [{\n    id: 1,\n    name: 'test'\n  }],\n  status: 'available'\n};\ntry {\n  const response = await axios.post(`${baseUrl}/pet`, newPet, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  // Status code kontrolü\n  expect(response.status).to.equal(200);\n  // Response data kontrolü\n  expect(response.data).to.be.an('object');\n  expect(response.data.id).to.equal(newPet.id);\n  expect(response.data.name).to.equal(newPet.name);\n  expect(response.data.status).to.equal(newPet.status);\n  expect(response.data.category.name).to.equal(newPet.category.name);\n  expect(response.data.photoUrls).to.deep.equal(newPet.photoUrls);\n  expect(response.data.tags).to.deep.equal(newPet.tags);\n  cy.log('Pet POST ile başarıyla eklendi');\n  cy.log(`Eklenen pet ID: ${response.data.id}`);\n} catch (error) {\n  cy.log('Pet POST testi başarısız:', error.message);\n  throw error;\n}",
              "err": {},
              "uuid": "8aabb867-ee01-4220-8ec8-a67fde68b9dd",
              "parentUUID": "52dbc4a6-e5b7-4bac-bbfe-94f31ce329b9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "343c008d-79c3-476c-aac3-35789b1bfc46",
            "eb7d727a-6288-413d-8ba5-81123b3eed56",
            "80b5d8e5-bab8-4887-9942-f0f64282118f",
            "8aabb867-ee01-4220-8ec8-a67fde68b9dd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2350,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "aee91e59-9a57-4bfd-b02e-4f0650507a2b",
      "title": "",
      "fullFile": "cypress\\e2e\\sepetkontrol.cy.js",
      "file": "cypress\\e2e\\sepetkontrol.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "befab3f8-0c70-43d7-b914-69793f8be567",
          "title": "PTT Sepet Kontrol",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Alışveriş akışı",
              "fullTitle": "PTT Sepet Kontrol Alışveriş akışı",
              "timedOut": null,
              "duration": 21601,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://www.pttavm.com/');\nhomePage.login('salih.demirbas.test@outlook.com', 'Salih.test123');\nhomePage.searchProduct('telefon');\nlistPage.checkSearchUrl();\nlistPage.selectFourthProduct();\nproductDetailPage.saveProductName();\nproductDetailPage.saveProductPrice();\nproductDetailPage.addToCart();\nproductDetailPage.checkCartBadgeVisible();\nproductDetailPage.checkModalVisible();\nproductDetailPage.goToCart();\ncheckoutPage.checkCartUrl();\ncheckoutPage.checkProductDetails();\ncheckoutPage.removeProductFromCart();",
              "err": {},
              "uuid": "67931f7a-4dea-4ef9-852d-fcaaf9686f5a",
              "parentUUID": "befab3f8-0c70-43d7-b914-69793f8be567",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "67931f7a-4dea-4ef9-852d-fcaaf9686f5a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21601,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c8f4c6eb-28f7-4fe8-b33b-2fb8d8a98460",
      "title": "",
      "fullFile": "cypress\\e2e\\favorikontrol.cy.js",
      "file": "cypress\\e2e\\favorikontrol.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a7c18e7c-8123-4f91-b541-8f71c6954f89",
          "title": "PTT Urun Favori Kontrol",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Favori Ekleme ve Silme",
              "fullTitle": "PTT Urun Favori Kontrol Favori Ekleme ve Silme",
              "timedOut": null,
              "duration": 24875,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://www.pttavm.com/');\nhomePage.login('salih.demirbas.test@outlook.com', 'Salih.test123');\nhomePage.searchProduct('telefon');\nlistPage.checkSearchUrl();\nlistPage.selectFourthProduct();\nproductDetailPage.saveFavoriteProductName();\nproductDetailPage.checkFavoriteButtonVisible();\nproductDetailPage.clickFavoriteButton();\nproductDetailPage.checkFavoriteAdded();\ncy.visit('https://www.pttavm.com/my/listelerim');\nfavoritePage.checkFavoriteInListPage();\nfavoritePage.removeFavoriteProduct();\nfavoritePage.checkFavoriteListEmpty();",
              "err": {},
              "uuid": "6c3951d7-71a2-411a-b2a8-a22601b5b0be",
              "parentUUID": "a7c18e7c-8123-4f91-b541-8f71c6954f89",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c3951d7-71a2-411a-b2a8-a22601b5b0be"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24875,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ecd1f3ac-e502-49c8-af5a-ff2708fb14d1",
      "title": "",
      "fullFile": "cypress\\e2e\\petstore-api-test-with-cypress-axios.cy.js",
      "file": "cypress\\e2e\\petstore-api-test-with-cypress-axios.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e18d728a-7df8-4314-a26a-c82bd198d9e2",
          "title": "PetStore Simple API Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should get pets by status=available successfully",
              "fullTitle": "PetStore Simple API Test should get pets by status=available successfully",
              "timedOut": null,
              "duration": 1817,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const response = await axios.get(`${baseUrl}/pet/findByStatus?status=available`);\n  // Status code kontrolü\n  expect(response.status).to.equal(200);\n  // Response data kontrolü\n  expect(response.data).to.be.an('array');\n  expect(response.data.length).to.be.greaterThan(0);\n  // İlk pet'in yapısını kontrol et\n  const firstPet = response.data[0];\n  expect(firstPet).to.have.property('id');\n  expect(firstPet).to.have.property('name');\n  expect(firstPet).to.have.property('tags');\n  expect(firstPet).to.have.property('status');\n  expect(firstPet.status).to.equal('available');\n  expect(firstPet.category.id).to.equal(0);\n  cy.log('Pet status=available API testi başarılı');\n  cy.log(`Bulunan pet sayısı: ${response.data.length}`);\n} catch (error) {\n  cy.log('Pet status=available API testi başarısız:', error.message);\n  throw error;\n}",
              "err": {},
              "uuid": "00300a3e-4441-44b6-9c20-6e5d3788914e",
              "parentUUID": "e18d728a-7df8-4314-a26a-c82bd198d9e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should get pets by status=pending successfully",
              "fullTitle": "PetStore Simple API Test should get pets by status=pending successfully",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const response = await axios.get(`${baseUrl}/pet/findByStatus?status=pending`);\n  // Status code kontrolü\n  expect(response.status).to.equal(200);\n  // Response data kontrolü\n  expect(response.data).to.be.an('array');\n  // İlk pet'in yapısını kontrol et (eğer varsa)\n  if (response.data.length > 0) {\n    const firstPet = response.data[0];\n    expect(firstPet).to.have.property('id');\n    expect(firstPet).to.have.property('name');\n    expect(firstPet).to.have.property('status');\n    expect(firstPet.status).to.equal('pending');\n  }\n  cy.log('Pet status=pending API testi başarılı');\n  cy.log(`Bulunan pet sayısı: ${response.data.length}`);\n} catch (error) {\n  cy.log('Pet status=pending API testi başarısız:', error.message);\n  throw error;\n}",
              "err": {},
              "uuid": "5e336d28-360f-448b-af1b-2bb7e8cc150d",
              "parentUUID": "e18d728a-7df8-4314-a26a-c82bd198d9e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should get pets by status=sold successfully",
              "fullTitle": "PetStore Simple API Test should get pets by status=sold successfully",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const response = await axios.get(`${baseUrl}/pet/findByStatus?status=sold`);\n  // Status code kontrolü\n  expect(response.status).to.equal(200);\n  // Response data kontrolü\n  expect(response.data).to.be.an('array');\n  // İlk pet'in yapısını kontrol et \n  if (response.data.length > 0) {\n    const firstPet = response.data[0];\n    expect(firstPet).to.have.property('id');\n    expect(firstPet).to.have.property('name');\n    expect(firstPet).to.have.property('status');\n    expect(firstPet.status).to.equal('sold');\n  }\n  cy.log('Pet status=sold API testi başarılı');\n  cy.log(`Bulunan pet sayısı: ${response.data.length}`);\n} catch (error) {\n  cy.log('Pet status=sold API testi başarısız:', error.message);\n  throw error;\n}",
              "err": {},
              "uuid": "21a35907-7097-4b14-b4e0-477f5d9c4a33",
              "parentUUID": "e18d728a-7df8-4314-a26a-c82bd198d9e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add a new pet successfully via POST",
              "fullTitle": "PetStore Simple API Test should add a new pet successfully via POST",
              "timedOut": null,
              "duration": 304,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newPet = {\n  id: 16,\n  category: {\n    id: 1,\n    name: 'Dogs'\n  },\n  name: 'Gofret',\n  photoUrls: ['https://www.pttavm.com/'],\n  tags: [{\n    id: 1,\n    name: 'test'\n  }],\n  status: 'available'\n};\ntry {\n  const response = await axios.post(`${baseUrl}/pet`, newPet, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  // Status code kontrolü\n  expect(response.status).to.equal(200);\n  // Response data kontrolü\n  expect(response.data).to.be.an('object');\n  expect(response.data.id).to.equal(newPet.id);\n  expect(response.data.name).to.equal(newPet.name);\n  expect(response.data.status).to.equal(newPet.status);\n  expect(response.data.category.name).to.equal(newPet.category.name);\n  expect(response.data.photoUrls).to.deep.equal(newPet.photoUrls);\n  expect(response.data.tags).to.deep.equal(newPet.tags);\n  cy.log('Pet POST ile başarıyla eklendi');\n  cy.log(`Eklenen pet ID: ${response.data.id}`);\n} catch (error) {\n  cy.log('Pet POST testi başarısız:', error.message);\n  throw error;\n}",
              "err": {},
              "uuid": "913bea28-f9bc-473e-9f7b-1345668e75d7",
              "parentUUID": "e18d728a-7df8-4314-a26a-c82bd198d9e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "00300a3e-4441-44b6-9c20-6e5d3788914e",
            "5e336d28-360f-448b-af1b-2bb7e8cc150d",
            "21a35907-7097-4b14-b4e0-477f5d9c4a33",
            "913bea28-f9bc-473e-9f7b-1345668e75d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2455,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0b63ea02-ff14-41a1-bae1-b9f0eae52595",
      "title": "",
      "fullFile": "cypress\\e2e\\sepetkontrol.cy.js",
      "file": "cypress\\e2e\\sepetkontrol.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "255218c5-511e-4d65-b041-7729f677f895",
          "title": "PTT Sepet Kontrol",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Alışveriş akışı",
              "fullTitle": "PTT Sepet Kontrol Alışveriş akışı",
              "timedOut": null,
              "duration": 20748,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://www.pttavm.com/');\nhomePage.login('salih.demirbas.test@outlook.com', 'Salih.test123');\nhomePage.searchProduct('telefon');\nlistPage.checkSearchUrl();\nlistPage.selectFourthProduct();\nproductDetailPage.saveProductName();\nproductDetailPage.saveProductPrice();\nproductDetailPage.addToCart();\nproductDetailPage.checkCartBadgeVisible();\nproductDetailPage.checkModalVisible();\nproductDetailPage.goToCart();\ncheckoutPage.checkCartUrl();\ncheckoutPage.checkProductDetails();\ncheckoutPage.removeProductFromCart();",
              "err": {},
              "uuid": "64dec2a1-c16d-4691-9252-135e0358ac5e",
              "parentUUID": "255218c5-511e-4d65-b041-7729f677f895",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "64dec2a1-c16d-4691-9252-135e0358ac5e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20748,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2aec5c8c-8772-463e-a906-724b2c9ce6d7",
      "title": "",
      "fullFile": "cypress\\e2e\\favorikontrol.cy.js",
      "file": "cypress\\e2e\\favorikontrol.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c96b7934-7def-4e47-bf45-b6b50938ea23",
          "title": "PTT Urun Favori Kontrol",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Favori Ekleme ve Silme",
              "fullTitle": "PTT Urun Favori Kontrol Favori Ekleme ve Silme",
              "timedOut": null,
              "duration": 55300,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://www.pttavm.com/');\nhomePage.login('salih.demirbas.test@outlook.com', 'Salih.test123');\nhomePage.searchProduct('telefon');\nlistPage.checkSearchUrl();\nlistPage.selectFourthProduct();\nproductDetailPage.saveFavoriteProductName();\nproductDetailPage.checkFavoriteButtonVisible();\nproductDetailPage.clickFavoriteButton();\nproductDetailPage.checkFavoriteAdded();\ncy.visit('https://www.pttavm.com/my/listelerim');\nfavoritePage.checkFavoriteInListPage();\nfavoritePage.removeFavoriteProduct();\nfavoritePage.checkFavoriteListEmpty();",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `.evoicon-fav-full`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `.evoicon-fav-full`, but never found it.\n    at ProductDetailPage.checkFavoriteAdded (webpack://ptt_test/./cypress/support/pageObjects/ProductDetailPage.js:54:52)\n    at Context.eval (webpack://ptt_test/./cypress/e2e/favorikontrol.cy.js:23:22)",
                "diff": null
              },
              "uuid": "b7fe0a71-3b3e-40bb-a7fa-cc44162ba2f1",
              "parentUUID": "c96b7934-7def-4e47-bf45-b6b50938ea23",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b7fe0a71-3b3e-40bb-a7fa-cc44162ba2f1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 55300,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}